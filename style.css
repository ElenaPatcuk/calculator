*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    background:url('https://artrue.ru/wp-content/uploads/2018/09/Liric_Abstract-Helen_Frankenthaler-min.jpg') no-repeat center center fixed;
    background-size: cover;
    font-family: sans-serif;
    font-size: 3vw;
    width: 100%;
    min-height: 100vh;
}
.input{
    display: grid;
    width: 100%;
    text-align: end;
    border-bottom: solid 2px black ;
    padding: 1vw;
    margin-bottom: 1vw;
    grid-column: span 4;
    overflow:auto;
    word-wrap: break-word;
    font-size: 4vw;
}
.input::-webkit-scrollbar {
    height: 1vw;
}
  
.input::-webkit-scrollbar-track {
    background-color: #06060625;
    border-radius: 2em;
}
  
.input::-webkit-scrollbar-thumb {
    border-radius: 2em;
    background: rgb(0, 0, 0);
}

.btn{
    background-color:  rgba(135, 207, 235, 0.413);;
    border: solid 2px rgba(135, 207, 235, 0.479);
    border-radius: 1em;
    display: grid;
    place-items: center;
    height: 6vw;
    cursor: pointer;
}

.btn:hover{
    background-color: rgba(1, 7, 120, 0.479);
    border: none;
    color: white;
    transition: all 400ms cubic-bezier(0.500, 0.250, 0.500, 0.750);
}

.container{
    display: grid;
    padding: 1vw;
    justify-content: center;
    grid-template-columns: repeat(4, 10vw);
    gap: 2vw;
}


/* *{
    margin: 0;
    padding: 0;
    font-size: 5vw;
    background-color: antiquewhite;
}

.container{
    margin: 1.6em;
    width: 80vw;
    display: table;
    position: absolute;
    top: 0;
    left: 0;
}

.input{
    width: 100%;
    text-align: end;
    font-size: 3vw;
    padding: 4vw 0;
    background-color: rgba(0, 0, 0, 0.2);
    color: white;
    margin-bottom: 1vw;
    font-size: 5vw;
}

.btns{
    display: grid;
    align-items: center;
    grid-template:  repeat(5, 10vw)/repeat(4, 20vw);
    grid-gap: 0.2em;
    cursor: pointer;
}

.btn{
    background-color: white;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.btn:hover{
    background-color: rgba(169, 169, 169, 0.308);    
}

.active {
    transform: scale(1.1);
    background-color: bisque;
} */





/* grid model - позволяет создавать структуры, необходимые 
для обеспечения отзывчивости. 
Элементы грида располагаются вдоль  
main - главной оси/основной
cross - поперечной оси

Схема Grid 
Схема содержит свойства, которые деляться на:
+ Parent Properties - родительские свойства грид-контейнера
    grid-template-columns:
        определение кол-ва и ширины колонок
        можно определять как свойства для каждой колонки
        в отдельности, так и устанавливать ширину всех 
        колонок через repeat()
        Пример: 
            grid-template-columns: 200px auto 100px
            grid-template-columns: repeat(3, 1fr)

    grid-template-rows:
        определение кол-ва и высоты строк
        можно определить как высоту каждой колонки в 
        отдельности, так и устанавливать высоту всех строк с 
        помощью функции repeat()
        Пример:
            grid-template-rows: 200px auto 100px
            grid-template-rows: repeat(3, 1fr)

    grid-template-areas:
        определения кол-ва пространства, занимаемого 
        ячейкой грида, в терминах колонок и строк, в 
        родительском контейнере
        Пример:
            grid-template-areas: 
                "A A A A   A A A A   A A A A"
                "B B B B   B B B B   B B C C"
                "B B B B   B B B B   B B C C";

    Reduction/сокращение: grid-template

    column & row gaps
        добавление свойства между колонками и строками
        Пример:
            column-gap:50px;
            row-gap: 50px;

    Reduction/сокращение: grid/grid-gap

    justyfy-items - main || align-items - cross
        позиционирование грид-элементов внутри грид-контейнера
        вдоль главной/поперечной оси. Принимает 4 значения:
        start end center stretch


    justify-content - main || align-content - cross
        позиционирование самого грида внутри грид-контейнера
        вдоль главной/рлреоечной оси. Принимает 7 значений:
        start - начало оси 
        end - конец оси
        center - центр оси 
        stretch - растягивает по вдоль оси
        space-between - колонки/строки распределены по ширине 
        space-around - колонки/строки с одинаковыми отступами между ними 
        space-evenly - колонки/строки с одинаковыми отступами со всех сторон

    Reduction/сокращение: place-items || place-content


+ дочерние свойства грид-элемментов
    grid-columns: start/end
        позволяет объединить колонки. Оно является сокращением для
        grid-column-start и grid-column-end
        Пример:
            grid-tamplate-columns: repeat(4, 1fr);
            grid-column: 1/5; или grid-column: span 4;

    grid-row: start/end
        позволяет объединить строки. Оно является сокращением для
        grid-row-start и grid-row-end
        Пример:
            grid-tamplate-rows: repeat(4, 1fr);
            grid-row: 1/5; или grid-row: span 4;

    grid-area
        обозначение названия области из grid-tamplate-areas
        Пример:
            grid-template-areas:
                "A A A A   A A A A   A A A A"
                "B B B B   B B B B   B B C C"
                "B B B B   B B B B   B B C C";
            grid-area: A;
            grid-area: B;
            grid-area: C;

    justify-self - main || align-self - cross
        позиционирование отдельного грид-элемемнта вдоль 
        основной/поперечной оси. Оно принимает 4 значения:
        start end center stretch
    
    Reduction/сокращение: place-self


*/